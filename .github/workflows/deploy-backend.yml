name: Deploy Backend to AWS ECR

on:
  push:
    branches: [ main ]

env:
  # The AWS region to deploy to.
  AWS_REGION: us-east-1 # Change this to your preferred region
  # The name of your ECR repository.
  ECR_REPOSITORY: paytm-backend

jobs:
  deploy:
    name: Build and Push to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        # This action securely logs into AWS using the secrets you stored.
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        # This action logs the Docker client into your ECR registry.
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        # This step performs the Docker build and push commands.
        env:
          # Get the ECR registry URI from the previous login step.
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          # Use the GitHub commit SHA to create a unique image tag.
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # The 'cd backend' is crucial because our Dockerfile is in that subfolder.
          cd backend
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG